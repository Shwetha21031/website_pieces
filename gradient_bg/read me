to center a div there are many and many ways:

<body class="flex , grid">
    <div class="classic"></div>
<body>

//way -1
.classic{
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%,-50%); //to move it back to the center
}

//way -2
.flex{
    display: flex;
    align-items: center;
    justify-content: center;
}

.grid{
    display: grid;
    place-items: center;
}


css animations:
an animation lets an element to change from one style to another;
you must first specift @keyframes(holds what style the element should have)
then bind the animation to element

/* The animation code */
@keyframes example {
  from {background-color: red;}
  to {background-color: yellow;}
}

/* The element to apply the animation to */
div {
  width: 100px;
  height: 100px;
  background-color: red;
  animation-name: example;
  animation-duration: 4s;
}

The animation-duration property defines how long an animation should take to complete. 
If the animation-duration property is not specified, no animation will occur, because the default value is 0s (0 seconds). 

the keywords "from" and "to" (which represents 0% (start) and 100% (complete)).

@keyframes example {
  0%   {background-color: red;} //in the bigenning
  25%  {background-color: yellow;} // after 25%
  50%  {background-color: blue;} // after 50% 
  100% {background-color: green;} //end
}


this changes the background color aswell as the position of the element
  0%  {background-color:red; left:0px; top:0px;}
  25%  {background-color:yellow; left:200px; top:0px;}
  50%  {background-color:blue; left:200px; top:200px;}
  75%  {background-color:green; left:0px; top:200px;}
  100% {background-color:red; left:0px; top:0px;}


animation-delay: 2s;
Negative values are also allowed. If using negative values, the animation will start as if it had already been playing for N seconds

  

animation-iteration-count : 3 -> this plays 3 times
else make it " infinite " to contine forever

animation-direction: reverse; to make it reverse
else alternate for back and forth



Specify the Speed Curve of the Animation
The animation-timing-function property specifies the speed curve of the animation.

The animation-timing-function property can have the following values:

ease - Specifies an animation with a slow start, then fast, then end slowly (this is default)
linear - Specifies an animation with the same speed from start to end
ease-in - Specifies an animation with a slow start
ease-out - Specifies an animation with a slow end
ease-in-out - Specifies an animation with a slow start and end
cubic-bezier(n,n,n,n) - Lets you define your own values in a cubic-bezier function

animations shorhand property:
animation: name , duration , timing-function , delay , iteration-count , direction;